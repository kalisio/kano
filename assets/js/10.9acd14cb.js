(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{419:function(t,a,e){t.exports=e.p+"assets/img/kano-installation.bfcc84a4.png"},444:function(t,a,e){"use strict";e.r(a);var s=e(5),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"installing-kano"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installing-kano"}},[t._v("#")]),t._v(" Installing Kano")]),t._v(" "),s("h2",{attrs:{id:"using-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-docker"}},[t._v("#")]),t._v(" Using Docker")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("This requires you to "),s("a",{attrs:{href:"https://docs.docker.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("install Docker"),s("OutboundLink")],1),t._v(", the worldâ€™s leading software container platform.")])]),t._v(" "),s("p",[t._v("We provide Docker images on the "),s("a",{attrs:{href:"https://hub.docker.com/r/kalisio/kano/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),s("OutboundLink")],1),t._v(" to ease deploying your own instance. To run correctly it has to be linked with a standard "),s("a",{attrs:{href:"https://hub.docker.com/_/mongo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB container"),s("OutboundLink")],1),t._v(" for the database. Although it's possible to directly run Docker commands we provide you with "),s("a",{attrs:{href:"https://docs.docker.com/compose/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker-compose"),s("OutboundLink")],1),t._v(" files to ease deployment, in addition to minimalist configuration files. These files will be detailed in the following sections and are available in the "),s("a",{attrs:{href:"https://github.com/kalisio/kano/tree/master/docs/.vuepress/public",target:"_blank",rel:"noopener noreferrer"}},[t._v("public folder"),s("OutboundLink")],1),t._v(" of the documentation.")]),t._v(" "),s("p",[t._v("Jump into the folder with the docker-compose and configuration files, the following commands should do the job:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// Run the MongoDB and Kano containers\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up -d\n\n// Stop the MongoDB and Kano containers\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down\n// Stop the MongoDB and Kano containers erasing DB data\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down -v\n")])])]),s("p",[t._v("Then point your browser to "),s("a",{attrs:{href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"}},[t._v("localhost:8080"),s("OutboundLink")],1),t._v(". You should see something like this once connected:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(419),alt:"installation"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Check the "),s("code",[t._v("local.cjs")]),t._v(" configuration file below to find the required login information")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("If running Docker under Windows in a virtual machine first redirect the port 8080 of your virtual machine to your host")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("docker-compose.yml - Used to deploy MongoDB and Kano containers.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.3'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kano")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kalisio/kano"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("dev\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" APP_SECRET=xxx\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" LAYERS_FILTER=OSM PLAN_IGN CESIUM_ELLIPSOID\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" BUILD_NUMBER\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" NODE_APP_INSTANCE\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DB_URL=mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("27017/kano\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DATA_DB_URL\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CESIUM_TOKEN=xxx\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MAPILLARY_TOKEN=xxx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bind\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("layers.cjs\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/kalisio/kano/api/config/layers/my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("layers.cjs\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bind\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./local.cjs\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /opt/kalisio/kano/api/config/local.cjs\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8081"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" kano\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data/db\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"27017:27017"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" kano\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kano")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n")])])])]),t._v(" "),s("p",[t._v("Kano comes with a default set of users but you should change this default configuration for a public deployment and avoid leaking login/passwords. Similarly, Kano comes with a default set of layers targeting geospatial services deployed by "),s("a",{attrs:{href:"https://kalisio.github.io/kargo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kargo"),s("OutboundLink")],1),t._v(" and you should add your own data layers instead. This is done by configuration using the following files:")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("local.cjs - Used to override the default backend configuration and setup a default user.")]),t._v(" "),s("p",[t._v("To be put in the "),s("code",[t._v("kano/api/config")]),t._v(" directory.")]),t._v(" "),s("div",{staticClass:"language-cjs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module.exports = {\n  authentication: {\n    defaultUsers: [\n      {\n        email: process.env.DEFAULT_USER_EMAIL || 'john.doe@gmail.com',\n        password: process.env.DEFAULT_USER_PASSWORD || 'John;Doe1',\n        name: 'John Doe',\n        catalog: { permissions: 'owner' } // Grant admin rights to update catalog\n      }\n    ],\n  }\n}\n\n")])])])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("my-layers.cjs - Used to define the available default layers.")]),t._v(" "),s("p",[t._v("To be put in the "),s("code",[t._v("kano/api/config/layers")]),t._v(" directory. Example based on OpenStreeetMap "),s("a",{attrs:{href:"https://wiki.openstreetmap.org/wiki/Tile_servers",target:"_blank",rel:"noopener noreferrer"}},[t._v("tile servers"),s("OutboundLink")],1),t._v(" and "),s("a",{attrs:{href:"https://geoservices.ign.fr/services-web-experts-cartes",target:"_blank",rel:"noopener noreferrer"}},[t._v("IGN web services"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("div",{staticClass:"language-cjs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("module.exports = [{\n    name: 'Layers.OSM',\n    description: 'Layers.OSM_DESCRIPTION',\n    i18n: {\n      fr: {\n        Layers: {\n          OSM: 'OSM',\n          OSM_DESCRIPTION: 'DonnÃ©es OpenStreetMap'\n        }\n      },\n      en: {\n        Layers: {\n          OSM: 'OSM',\n          OSM_DESCRIPTION: 'OpenStreeMap data'\n        }\n      }\n    },\n    tags: [\n      'street'\n    ],\n    iconUrl: `http://a.tile.osm.org/0/0/0.png`,\n    icon: 'streetview',\n    attribution: 'OpenStreetMap Â© <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n    type: 'BaseLayer',\n    leaflet: {\n      type: 'tileLayer',\n      isVisible: true,\n      source: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',\n      maxZoom: 21,\n      maxNativeZoom: 18\n    },\n    cesium: {\n      type: 'OpenStreetMap',\n      url: `http://a.tile.osm.org`\n    }\n  },\n  {\n    name: 'Layers.PLAN_IGN',\n    description: 'Layers.PLAN_IGN_DESCRIPTION',\n    i18n: {\n      fr: {\n        Layers: {\n          PLAN_IGN: 'Plan IGN',\n          PLAN_IGN_DESCRIPTION: 'Plan IGN v2'\n        }\n      },\n      en: {\n        Layers: {\n          PLAN_IGN: 'Plan IGN',\n          PLAN_IGN_DESCRIPTION: 'Plan IGN v2'\n        }\n      }\n    },\n    tags: [\n      'street'\n    ],\n    type: 'BaseLayer',\n    iconUrl: 'https://wxs.ign.fr/cartes/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2&STYLE=normal&FORMAT=image/png&TILEMATRIXSET=PM&TILEMATRIX=8&TILEROW=92&TILECOL=132',\n    icon: 'las la-plug',\n    attribution: '<a href=\"https://www.ign.fr/\">IGN</a>',\n    cesium: {\n      type: 'WebMapTileService',\n      url: 'https://wxs.ign.fr/cartes/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2&STYLE=normal&FORMAT=image/png&TILEMATRIXSET=PM&TILEMATRIX={TileMatrix}&TILEROW={TileRow}&TILECOL={TileCol}',\n      format: 'image/png',\n      layer: 'GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2',\n      style: 'normal',\n      tileMatrixSetID: 'PM'\n    },\n    leaflet: {\n      type: 'tileLayer',\n      source: 'https://wxs.ign.fr/cartes/geoportail/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2&STYLE=normal&FORMAT=image/png&TILEMATRIXSET=PM&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}',\n    }\n  }\n]\n\n\n")])])])]),t._v(" "),s("p",[t._v("As detailed in the "),s("a",{attrs:{href:"https://kalisio.github.io/kdk/guides/development/deploy.html#deployment-flavors",target:"_blank",rel:"noopener noreferrer"}},[t._v("KDK documentation"),s("OutboundLink")],1),t._v(" Kano comes into three different flavors. By default the docker-compose file targets the latest development version but you can change it to target a production release.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("By default no built-in layers are available in Kano unless you specify their names using the "),s("code",[t._v("LAYERS_FILTER")]),t._v(" environment variable. You can however directly add new layers using the Kano GUI (through the add layer button or by drag'n'drop on the map).")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If you'd like to use the 3D mode or the Mapillary layer you should provide the required tokens to access their respective APIs on the backend side by setting the following environment variables: "),s("code",[t._v("CESIUM_TOKEN")]),t._v(", "),s("code",[t._v("MAPILLARY_TOKEN")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"add-weather-forecasts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-weather-forecasts"}},[t._v("#")]),t._v(" Add weather forecasts")]),t._v(" "),s("p",[t._v("Kano integrates smoothly with "),s("a",{attrs:{href:"https://weacast.github.io/weacast/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Weacast"),s("OutboundLink")],1),t._v(" in order to display weather forecast data. You can also use Docker containers to run Weacast by following "),s("a",{attrs:{href:"https://weacast.github.io/weacast/guides/basics.html#the-easy-way-using-docker",target:"_blank",rel:"noopener noreferrer"}},[t._v("this guide"),s("OutboundLink")],1),t._v(" and taking care of port conflicts as they use the same by default.")]),t._v(" "),s("p",[t._v("The following commands and additional docker-compose file should do the job:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// Run the MongoDB, Weacast and Kano containers\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" -f docker-compose.yml -f docker-compose-weacast.yml up -d\n\n// Stop the MongoDB, Weacast and Kano containers\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" -f docker-compose.yml -f docker-compose-weacast.yml down \n// Stop the MongoDB, Weacast and Kano containers erasing DB data\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" -f docker-compose.yml -f docker-compose-weacast.yml down -v\n")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("docker-compose-weacast.yml - Used to deploy Weacast container.")]),t._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.3'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kano")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" APP_SECRET=xxx\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" LAYERS_FILTER=OSM PLAN_IGN WIND_TILED GUST_TILED PRECIPITATIONS_TILED TEMPERATURE_TILED CESIUM_ELLIPSOID\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" BUILD_NUMBER\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" NODE_APP_INSTANCE\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DB_URL\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DATA_DB_URL\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" CESIUM_TOKEN=xxx\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MAPILLARY_TOKEN=xxx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("weacast")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" weacast/weacast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("dev\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" APP_SECRET=yyy\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DB_URL=mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//mongodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("27017/weacast\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" LOADERS=gfs\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" LOG_LEVEL\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" DEBUG\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8081:8081"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" kano\n")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("You should activate the built-in Weacast layers like "),s("code",[t._v("WIND_TILED")]),t._v(" in Kano using the "),s("code",[t._v("LAYERS_FILTER")]),t._v(" environment variable.")])]),t._v(" "),s("h2",{attrs:{id:"from-source-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#from-source-code"}},[t._v("#")]),t._v(" From source code")]),t._v(" "),s("p",[t._v("First you have to ensure the "),s("a",{attrs:{href:"https://kalisio.github.io/kdk/guides/development/setup.html#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[t._v("KDK prerequisites"),s("OutboundLink")],1),t._v(" to run Kano from source code.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("At the time of writing Kano v2.x ("),s("code",[t._v("master")]),t._v(" branch) is expected to work with KDK modules v2.x ("),s("code",[t._v("master")]),t._v(" branch and Node.js 16.x) and Kano v1.x ("),s("code",[t._v("test")]),t._v(" branches) is expected to work with KDK modules v1.x (Node.js 12.x)")])]),t._v(" "),s("p",[t._v("Then the following commands, assuming you have a MongoDB instance running on local host and default port (27017), should launch your local instance of Kano:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// Clone KDK\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/kalisio/kdk.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" kdk\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n\n// In another terminal clone Kano\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/kalisio/kano.git\n\n// Set the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" minimalist environment to run server\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("APP_SECRET")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LAYERS_FILTER")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OSM PLAN_IGN CESIUM_ELLIPSOID"')]),t._v("\n\n// Run the server/API\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" kano/api\n// Copy custom configuration files\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" local.js config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" my-layers.js config/layers\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" @kalisio/kdk\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n\n// In another terminal run the client app\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" kano\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v(" @kalisio/kdk\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n")])])]),s("p",[t._v("Point your browser to "),s("a",{attrs:{href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"}},[t._v("localhost:8080"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"add-weather-forecasts-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-weather-forecasts-2"}},[t._v("#")]),t._v(" Add weather forecasts")]),t._v(" "),s("p",[t._v("Instead of using Docker containers you can directly install Weacast from the source code as well by following "),s("a",{attrs:{href:"https://weacast.github.io/weacast/guides/basics.html#the-hard-way-from-source-code",target:"_blank",rel:"noopener noreferrer"}},[t._v("this guide"),s("OutboundLink")],1),t._v(". You should however take care of port conflicts as it uses the same than Kano by default (API and NodeJS debugger), the following commands should do the job:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// Clone Weacast\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/weacast/weacast.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" weacast\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n// Set the "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" minimalist environment to run server\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PORT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8082"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("NODE_OPTIONS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--inspect-port=9230"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LOADERS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gfs"')]),t._v("\n\n// Run the server/API\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" packages/api\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("You should activate the built-in Weacast layers like "),s("code",[t._v("WIND_TILED")]),t._v(" in Kano using the "),s("code",[t._v("LAYERS_FILTER")]),t._v(" environment variable.")])]),t._v(" "),s("h2",{attrs:{id:"use-kargo-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#use-kargo-services"}},[t._v("#")]),t._v(" Use Kargo services")]),t._v(" "),s("p",[t._v("You can easily connect Kano with geospatial services deployed by "),s("a",{attrs:{href:"https://kalisio.github.io/kargo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kargo"),s("OutboundLink")],1),t._v(" through its "),s("a",{attrs:{href:"https://kalisio.github.io/kargo/guides/advanced-usage.html#using-the-api-gateway",target:"_blank",rel:"noopener noreferrer"}},[t._v("API gateway"),s("OutboundLink")],1),t._v(". First add the Kano application/consumer in the gateway configuration by generating a "),s("a",{attrs:{href:"https://www.uuidgenerator.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("UUID"),s("OutboundLink")],1),t._v(":")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("users: {\n  my_user: {\n    'kano': {\n      scopes: ['wms', 'wmts', 'tms', 'wfs', 'wcs', 'k2'],\n      credential: {\n        type: 'jwt',\n        keyId: '9ba09ead-23e1-4020-9994-aa9130782b09',\n        keySecret: '${APP_SECRET}'\n      }\n    }\n  }\n}\n")])])]),s("p",[t._v("Then add the following environment variables before launching the Kano backend:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("// Setup the target gateway\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("API_GATEWAY_URL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.your.kargo.domain"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("APP_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9ba09ead-23e1-4020-9994-aa9130782b09"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" dev\n")])])]),s("p",[t._v("This will automatically generate a valid token for the gateway once you log in and add it to any request targeting a service behind the gateway.")])])}),[],!1,null,null,null);a.default=n.exports}}]);